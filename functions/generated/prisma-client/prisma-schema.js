module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `enum AccountType {
  SME
  LENDER
  ADMIN
}

type AggregateApplication {
  count: Int!
}

type AggregateAuth {
  count: Int!
}

type AggregateBusinessDetail {
  count: Int!
}

type AggregateBusinessFinancial {
  count: Int!
}

type AggregateBusinessValidation {
  count: Int!
}

type AggregateFundDetail {
  count: Int!
}

type AggregateIndustry {
  count: Int!
}

type AggregateNextOfKinDetail {
  count: Int!
}

type AggregatePersonalDetail {
  count: Int!
}

type AggregateSocialMedia {
  count: Int!
}

type Application {
  id: ID!
  application_type: String!
  auth: Auth
  fund_details: FundDetail!
  personal_details: PersonalDetail!
  business_details: BusinessDetail!
  business_financials: BusinessFinancial!
  validations: BusinessValidation!
  fund_status: FundStatus!
}

type ApplicationConnection {
  pageInfo: PageInfo!
  edges: [ApplicationEdge]!
  aggregate: AggregateApplication!
}

input ApplicationCreateInput {
  id: ID
  application_type: String!
  auth: AuthCreateOneWithoutApplicationsInput
  fund_details: FundDetailCreateOneInput!
  personal_details: PersonalDetailCreateOneInput!
  business_details: BusinessDetailCreateOneInput!
  business_financials: BusinessFinancialCreateOneInput!
  validations: BusinessValidationCreateOneInput!
  fund_status: FundStatus
}

input ApplicationCreateManyWithoutAuthInput {
  create: [ApplicationCreateWithoutAuthInput!]
  connect: [ApplicationWhereUniqueInput!]
}

input ApplicationCreateWithoutAuthInput {
  id: ID
  application_type: String!
  fund_details: FundDetailCreateOneInput!
  personal_details: PersonalDetailCreateOneInput!
  business_details: BusinessDetailCreateOneInput!
  business_financials: BusinessFinancialCreateOneInput!
  validations: BusinessValidationCreateOneInput!
  fund_status: FundStatus
}

type ApplicationEdge {
  node: Application!
  cursor: String!
}

enum ApplicationOrderByInput {
  id_ASC
  id_DESC
  application_type_ASC
  application_type_DESC
  fund_status_ASC
  fund_status_DESC
}

type ApplicationPreviousValues {
  id: ID!
  application_type: String!
  fund_status: FundStatus!
}

input ApplicationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  application_type: String
  application_type_not: String
  application_type_in: [String!]
  application_type_not_in: [String!]
  application_type_lt: String
  application_type_lte: String
  application_type_gt: String
  application_type_gte: String
  application_type_contains: String
  application_type_not_contains: String
  application_type_starts_with: String
  application_type_not_starts_with: String
  application_type_ends_with: String
  application_type_not_ends_with: String
  fund_status: FundStatus
  fund_status_not: FundStatus
  fund_status_in: [FundStatus!]
  fund_status_not_in: [FundStatus!]
  AND: [ApplicationScalarWhereInput!]
  OR: [ApplicationScalarWhereInput!]
  NOT: [ApplicationScalarWhereInput!]
}

type ApplicationSubscriptionPayload {
  mutation: MutationType!
  node: Application
  updatedFields: [String!]
  previousValues: ApplicationPreviousValues
}

input ApplicationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ApplicationWhereInput
  AND: [ApplicationSubscriptionWhereInput!]
  OR: [ApplicationSubscriptionWhereInput!]
  NOT: [ApplicationSubscriptionWhereInput!]
}

input ApplicationUpdateInput {
  application_type: String
  auth: AuthUpdateOneWithoutApplicationsInput
  fund_details: FundDetailUpdateOneRequiredInput
  personal_details: PersonalDetailUpdateOneRequiredInput
  business_details: BusinessDetailUpdateOneRequiredInput
  business_financials: BusinessFinancialUpdateOneRequiredInput
  validations: BusinessValidationUpdateOneRequiredInput
  fund_status: FundStatus
}

input ApplicationUpdateManyDataInput {
  application_type: String
  fund_status: FundStatus
}

input ApplicationUpdateManyMutationInput {
  application_type: String
  fund_status: FundStatus
}

input ApplicationUpdateManyWithoutAuthInput {
  create: [ApplicationCreateWithoutAuthInput!]
  delete: [ApplicationWhereUniqueInput!]
  connect: [ApplicationWhereUniqueInput!]
  set: [ApplicationWhereUniqueInput!]
  disconnect: [ApplicationWhereUniqueInput!]
  update: [ApplicationUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [ApplicationUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [ApplicationScalarWhereInput!]
  updateMany: [ApplicationUpdateManyWithWhereNestedInput!]
}

input ApplicationUpdateManyWithWhereNestedInput {
  where: ApplicationScalarWhereInput!
  data: ApplicationUpdateManyDataInput!
}

input ApplicationUpdateWithoutAuthDataInput {
  application_type: String
  fund_details: FundDetailUpdateOneRequiredInput
  personal_details: PersonalDetailUpdateOneRequiredInput
  business_details: BusinessDetailUpdateOneRequiredInput
  business_financials: BusinessFinancialUpdateOneRequiredInput
  validations: BusinessValidationUpdateOneRequiredInput
  fund_status: FundStatus
}

input ApplicationUpdateWithWhereUniqueWithoutAuthInput {
  where: ApplicationWhereUniqueInput!
  data: ApplicationUpdateWithoutAuthDataInput!
}

input ApplicationUpsertWithWhereUniqueWithoutAuthInput {
  where: ApplicationWhereUniqueInput!
  update: ApplicationUpdateWithoutAuthDataInput!
  create: ApplicationCreateWithoutAuthInput!
}

input ApplicationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  application_type: String
  application_type_not: String
  application_type_in: [String!]
  application_type_not_in: [String!]
  application_type_lt: String
  application_type_lte: String
  application_type_gt: String
  application_type_gte: String
  application_type_contains: String
  application_type_not_contains: String
  application_type_starts_with: String
  application_type_not_starts_with: String
  application_type_ends_with: String
  application_type_not_ends_with: String
  auth: AuthWhereInput
  fund_details: FundDetailWhereInput
  personal_details: PersonalDetailWhereInput
  business_details: BusinessDetailWhereInput
  business_financials: BusinessFinancialWhereInput
  validations: BusinessValidationWhereInput
  fund_status: FundStatus
  fund_status_not: FundStatus
  fund_status_in: [FundStatus!]
  fund_status_not_in: [FundStatus!]
  AND: [ApplicationWhereInput!]
  OR: [ApplicationWhereInput!]
  NOT: [ApplicationWhereInput!]
}

input ApplicationWhereUniqueInput {
  id: ID
}

type Auth {
  id: ID!
  firebase_id: String!
  account_type: AccountType!
  details: PersonalDetail!
  social_media(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia!]
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application!]
  created_at: DateTime!
  updated_at: DateTime!
}

type AuthConnection {
  pageInfo: PageInfo!
  edges: [AuthEdge]!
  aggregate: AggregateAuth!
}

input AuthCreateInput {
  id: ID
  firebase_id: String!
  account_type: AccountType
  details: PersonalDetailCreateOneWithoutAuthInput!
  social_media: SocialMediaCreateManyWithoutAuthInput
  applications: ApplicationCreateManyWithoutAuthInput
}

input AuthCreateOneWithoutApplicationsInput {
  create: AuthCreateWithoutApplicationsInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutDetailsInput {
  create: AuthCreateWithoutDetailsInput
  connect: AuthWhereUniqueInput
}

input AuthCreateOneWithoutSocial_mediaInput {
  create: AuthCreateWithoutSocial_mediaInput
  connect: AuthWhereUniqueInput
}

input AuthCreateWithoutApplicationsInput {
  id: ID
  firebase_id: String!
  account_type: AccountType
  details: PersonalDetailCreateOneWithoutAuthInput!
  social_media: SocialMediaCreateManyWithoutAuthInput
}

input AuthCreateWithoutDetailsInput {
  id: ID
  firebase_id: String!
  account_type: AccountType
  social_media: SocialMediaCreateManyWithoutAuthInput
  applications: ApplicationCreateManyWithoutAuthInput
}

input AuthCreateWithoutSocial_mediaInput {
  id: ID
  firebase_id: String!
  account_type: AccountType
  details: PersonalDetailCreateOneWithoutAuthInput!
  applications: ApplicationCreateManyWithoutAuthInput
}

type AuthEdge {
  node: Auth!
  cursor: String!
}

enum AuthOrderByInput {
  id_ASC
  id_DESC
  firebase_id_ASC
  firebase_id_DESC
  account_type_ASC
  account_type_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AuthPreviousValues {
  id: ID!
  firebase_id: String!
  account_type: AccountType!
  created_at: DateTime!
  updated_at: DateTime!
}

type AuthSubscriptionPayload {
  mutation: MutationType!
  node: Auth
  updatedFields: [String!]
  previousValues: AuthPreviousValues
}

input AuthSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AuthWhereInput
  AND: [AuthSubscriptionWhereInput!]
  OR: [AuthSubscriptionWhereInput!]
  NOT: [AuthSubscriptionWhereInput!]
}

input AuthUpdateInput {
  firebase_id: String
  account_type: AccountType
  details: PersonalDetailUpdateOneRequiredWithoutAuthInput
  social_media: SocialMediaUpdateManyWithoutAuthInput
  applications: ApplicationUpdateManyWithoutAuthInput
}

input AuthUpdateManyMutationInput {
  firebase_id: String
  account_type: AccountType
}

input AuthUpdateOneRequiredWithoutSocial_mediaInput {
  create: AuthCreateWithoutSocial_mediaInput
  update: AuthUpdateWithoutSocial_mediaDataInput
  upsert: AuthUpsertWithoutSocial_mediaInput
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneWithoutApplicationsInput {
  create: AuthCreateWithoutApplicationsInput
  update: AuthUpdateWithoutApplicationsDataInput
  upsert: AuthUpsertWithoutApplicationsInput
  delete: Boolean
  disconnect: Boolean
  connect: AuthWhereUniqueInput
}

input AuthUpdateOneWithoutDetailsInput {
  create: AuthCreateWithoutDetailsInput
  update: AuthUpdateWithoutDetailsDataInput
  upsert: AuthUpsertWithoutDetailsInput
  delete: Boolean
  disconnect: Boolean
  connect: AuthWhereUniqueInput
}

input AuthUpdateWithoutApplicationsDataInput {
  firebase_id: String
  account_type: AccountType
  details: PersonalDetailUpdateOneRequiredWithoutAuthInput
  social_media: SocialMediaUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutDetailsDataInput {
  firebase_id: String
  account_type: AccountType
  social_media: SocialMediaUpdateManyWithoutAuthInput
  applications: ApplicationUpdateManyWithoutAuthInput
}

input AuthUpdateWithoutSocial_mediaDataInput {
  firebase_id: String
  account_type: AccountType
  details: PersonalDetailUpdateOneRequiredWithoutAuthInput
  applications: ApplicationUpdateManyWithoutAuthInput
}

input AuthUpsertWithoutApplicationsInput {
  update: AuthUpdateWithoutApplicationsDataInput!
  create: AuthCreateWithoutApplicationsInput!
}

input AuthUpsertWithoutDetailsInput {
  update: AuthUpdateWithoutDetailsDataInput!
  create: AuthCreateWithoutDetailsInput!
}

input AuthUpsertWithoutSocial_mediaInput {
  update: AuthUpdateWithoutSocial_mediaDataInput!
  create: AuthCreateWithoutSocial_mediaInput!
}

input AuthWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firebase_id: String
  firebase_id_not: String
  firebase_id_in: [String!]
  firebase_id_not_in: [String!]
  firebase_id_lt: String
  firebase_id_lte: String
  firebase_id_gt: String
  firebase_id_gte: String
  firebase_id_contains: String
  firebase_id_not_contains: String
  firebase_id_starts_with: String
  firebase_id_not_starts_with: String
  firebase_id_ends_with: String
  firebase_id_not_ends_with: String
  account_type: AccountType
  account_type_not: AccountType
  account_type_in: [AccountType!]
  account_type_not_in: [AccountType!]
  details: PersonalDetailWhereInput
  social_media_every: SocialMediaWhereInput
  social_media_some: SocialMediaWhereInput
  social_media_none: SocialMediaWhereInput
  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  AND: [AuthWhereInput!]
  OR: [AuthWhereInput!]
  NOT: [AuthWhereInput!]
}

input AuthWhereUniqueInput {
  id: ID
  firebase_id: String
}

type BatchPayload {
  count: Long!
}

type BusinessDetail {
  id: ID!
  name: String!
  business_type: String!
  registation_id: String!
  cac_file_link: String!
  industry_type: String!
  business_start_year: Int!
  street_address: String!
  state: String!
  local_goverment_area: String!
  website_url: String
  social_media_url: String
  created_at: DateTime!
  updated_at: DateTime!
}

type BusinessDetailConnection {
  pageInfo: PageInfo!
  edges: [BusinessDetailEdge]!
  aggregate: AggregateBusinessDetail!
}

input BusinessDetailCreateInput {
  id: ID
  name: String!
  business_type: String!
  registation_id: String!
  cac_file_link: String!
  industry_type: String!
  business_start_year: Int!
  street_address: String!
  state: String!
  local_goverment_area: String!
  website_url: String
  social_media_url: String
}

input BusinessDetailCreateOneInput {
  create: BusinessDetailCreateInput
  connect: BusinessDetailWhereUniqueInput
}

type BusinessDetailEdge {
  node: BusinessDetail!
  cursor: String!
}

enum BusinessDetailOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  business_type_ASC
  business_type_DESC
  registation_id_ASC
  registation_id_DESC
  cac_file_link_ASC
  cac_file_link_DESC
  industry_type_ASC
  industry_type_DESC
  business_start_year_ASC
  business_start_year_DESC
  street_address_ASC
  street_address_DESC
  state_ASC
  state_DESC
  local_goverment_area_ASC
  local_goverment_area_DESC
  website_url_ASC
  website_url_DESC
  social_media_url_ASC
  social_media_url_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type BusinessDetailPreviousValues {
  id: ID!
  name: String!
  business_type: String!
  registation_id: String!
  cac_file_link: String!
  industry_type: String!
  business_start_year: Int!
  street_address: String!
  state: String!
  local_goverment_area: String!
  website_url: String
  social_media_url: String
  created_at: DateTime!
  updated_at: DateTime!
}

type BusinessDetailSubscriptionPayload {
  mutation: MutationType!
  node: BusinessDetail
  updatedFields: [String!]
  previousValues: BusinessDetailPreviousValues
}

input BusinessDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BusinessDetailWhereInput
  AND: [BusinessDetailSubscriptionWhereInput!]
  OR: [BusinessDetailSubscriptionWhereInput!]
  NOT: [BusinessDetailSubscriptionWhereInput!]
}

input BusinessDetailUpdateDataInput {
  name: String
  business_type: String
  registation_id: String
  cac_file_link: String
  industry_type: String
  business_start_year: Int
  street_address: String
  state: String
  local_goverment_area: String
  website_url: String
  social_media_url: String
}

input BusinessDetailUpdateInput {
  name: String
  business_type: String
  registation_id: String
  cac_file_link: String
  industry_type: String
  business_start_year: Int
  street_address: String
  state: String
  local_goverment_area: String
  website_url: String
  social_media_url: String
}

input BusinessDetailUpdateManyMutationInput {
  name: String
  business_type: String
  registation_id: String
  cac_file_link: String
  industry_type: String
  business_start_year: Int
  street_address: String
  state: String
  local_goverment_area: String
  website_url: String
  social_media_url: String
}

input BusinessDetailUpdateOneRequiredInput {
  create: BusinessDetailCreateInput
  update: BusinessDetailUpdateDataInput
  upsert: BusinessDetailUpsertNestedInput
  connect: BusinessDetailWhereUniqueInput
}

input BusinessDetailUpsertNestedInput {
  update: BusinessDetailUpdateDataInput!
  create: BusinessDetailCreateInput!
}

input BusinessDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  business_type: String
  business_type_not: String
  business_type_in: [String!]
  business_type_not_in: [String!]
  business_type_lt: String
  business_type_lte: String
  business_type_gt: String
  business_type_gte: String
  business_type_contains: String
  business_type_not_contains: String
  business_type_starts_with: String
  business_type_not_starts_with: String
  business_type_ends_with: String
  business_type_not_ends_with: String
  registation_id: String
  registation_id_not: String
  registation_id_in: [String!]
  registation_id_not_in: [String!]
  registation_id_lt: String
  registation_id_lte: String
  registation_id_gt: String
  registation_id_gte: String
  registation_id_contains: String
  registation_id_not_contains: String
  registation_id_starts_with: String
  registation_id_not_starts_with: String
  registation_id_ends_with: String
  registation_id_not_ends_with: String
  cac_file_link: String
  cac_file_link_not: String
  cac_file_link_in: [String!]
  cac_file_link_not_in: [String!]
  cac_file_link_lt: String
  cac_file_link_lte: String
  cac_file_link_gt: String
  cac_file_link_gte: String
  cac_file_link_contains: String
  cac_file_link_not_contains: String
  cac_file_link_starts_with: String
  cac_file_link_not_starts_with: String
  cac_file_link_ends_with: String
  cac_file_link_not_ends_with: String
  industry_type: String
  industry_type_not: String
  industry_type_in: [String!]
  industry_type_not_in: [String!]
  industry_type_lt: String
  industry_type_lte: String
  industry_type_gt: String
  industry_type_gte: String
  industry_type_contains: String
  industry_type_not_contains: String
  industry_type_starts_with: String
  industry_type_not_starts_with: String
  industry_type_ends_with: String
  industry_type_not_ends_with: String
  business_start_year: Int
  business_start_year_not: Int
  business_start_year_in: [Int!]
  business_start_year_not_in: [Int!]
  business_start_year_lt: Int
  business_start_year_lte: Int
  business_start_year_gt: Int
  business_start_year_gte: Int
  street_address: String
  street_address_not: String
  street_address_in: [String!]
  street_address_not_in: [String!]
  street_address_lt: String
  street_address_lte: String
  street_address_gt: String
  street_address_gte: String
  street_address_contains: String
  street_address_not_contains: String
  street_address_starts_with: String
  street_address_not_starts_with: String
  street_address_ends_with: String
  street_address_not_ends_with: String
  state: String
  state_not: String
  state_in: [String!]
  state_not_in: [String!]
  state_lt: String
  state_lte: String
  state_gt: String
  state_gte: String
  state_contains: String
  state_not_contains: String
  state_starts_with: String
  state_not_starts_with: String
  state_ends_with: String
  state_not_ends_with: String
  local_goverment_area: String
  local_goverment_area_not: String
  local_goverment_area_in: [String!]
  local_goverment_area_not_in: [String!]
  local_goverment_area_lt: String
  local_goverment_area_lte: String
  local_goverment_area_gt: String
  local_goverment_area_gte: String
  local_goverment_area_contains: String
  local_goverment_area_not_contains: String
  local_goverment_area_starts_with: String
  local_goverment_area_not_starts_with: String
  local_goverment_area_ends_with: String
  local_goverment_area_not_ends_with: String
  website_url: String
  website_url_not: String
  website_url_in: [String!]
  website_url_not_in: [String!]
  website_url_lt: String
  website_url_lte: String
  website_url_gt: String
  website_url_gte: String
  website_url_contains: String
  website_url_not_contains: String
  website_url_starts_with: String
  website_url_not_starts_with: String
  website_url_ends_with: String
  website_url_not_ends_with: String
  social_media_url: String
  social_media_url_not: String
  social_media_url_in: [String!]
  social_media_url_not_in: [String!]
  social_media_url_lt: String
  social_media_url_lte: String
  social_media_url_gt: String
  social_media_url_gte: String
  social_media_url_contains: String
  social_media_url_not_contains: String
  social_media_url_starts_with: String
  social_media_url_not_starts_with: String
  social_media_url_ends_with: String
  social_media_url_not_ends_with: String
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  AND: [BusinessDetailWhereInput!]
  OR: [BusinessDetailWhereInput!]
  NOT: [BusinessDetailWhereInput!]
}

input BusinessDetailWhereUniqueInput {
  id: ID
  registation_id: String
}

type BusinessFinancial {
  id: ID!
  avg_monthly_revenue: Float!
  avg_monthly_expense: Float!
  serving_loan: Boolean!
  bank_account_name: String!
  bank_account_number: String!
  bank_name: String!
}

type BusinessFinancialConnection {
  pageInfo: PageInfo!
  edges: [BusinessFinancialEdge]!
  aggregate: AggregateBusinessFinancial!
}

input BusinessFinancialCreateInput {
  id: ID
  avg_monthly_revenue: Float!
  avg_monthly_expense: Float!
  serving_loan: Boolean!
  bank_account_name: String!
  bank_account_number: String!
  bank_name: String!
}

input BusinessFinancialCreateOneInput {
  create: BusinessFinancialCreateInput
  connect: BusinessFinancialWhereUniqueInput
}

type BusinessFinancialEdge {
  node: BusinessFinancial!
  cursor: String!
}

enum BusinessFinancialOrderByInput {
  id_ASC
  id_DESC
  avg_monthly_revenue_ASC
  avg_monthly_revenue_DESC
  avg_monthly_expense_ASC
  avg_monthly_expense_DESC
  serving_loan_ASC
  serving_loan_DESC
  bank_account_name_ASC
  bank_account_name_DESC
  bank_account_number_ASC
  bank_account_number_DESC
  bank_name_ASC
  bank_name_DESC
}

type BusinessFinancialPreviousValues {
  id: ID!
  avg_monthly_revenue: Float!
  avg_monthly_expense: Float!
  serving_loan: Boolean!
  bank_account_name: String!
  bank_account_number: String!
  bank_name: String!
}

type BusinessFinancialSubscriptionPayload {
  mutation: MutationType!
  node: BusinessFinancial
  updatedFields: [String!]
  previousValues: BusinessFinancialPreviousValues
}

input BusinessFinancialSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BusinessFinancialWhereInput
  AND: [BusinessFinancialSubscriptionWhereInput!]
  OR: [BusinessFinancialSubscriptionWhereInput!]
  NOT: [BusinessFinancialSubscriptionWhereInput!]
}

input BusinessFinancialUpdateDataInput {
  avg_monthly_revenue: Float
  avg_monthly_expense: Float
  serving_loan: Boolean
  bank_account_name: String
  bank_account_number: String
  bank_name: String
}

input BusinessFinancialUpdateInput {
  avg_monthly_revenue: Float
  avg_monthly_expense: Float
  serving_loan: Boolean
  bank_account_name: String
  bank_account_number: String
  bank_name: String
}

input BusinessFinancialUpdateManyMutationInput {
  avg_monthly_revenue: Float
  avg_monthly_expense: Float
  serving_loan: Boolean
  bank_account_name: String
  bank_account_number: String
  bank_name: String
}

input BusinessFinancialUpdateOneRequiredInput {
  create: BusinessFinancialCreateInput
  update: BusinessFinancialUpdateDataInput
  upsert: BusinessFinancialUpsertNestedInput
  connect: BusinessFinancialWhereUniqueInput
}

input BusinessFinancialUpsertNestedInput {
  update: BusinessFinancialUpdateDataInput!
  create: BusinessFinancialCreateInput!
}

input BusinessFinancialWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  avg_monthly_revenue: Float
  avg_monthly_revenue_not: Float
  avg_monthly_revenue_in: [Float!]
  avg_monthly_revenue_not_in: [Float!]
  avg_monthly_revenue_lt: Float
  avg_monthly_revenue_lte: Float
  avg_monthly_revenue_gt: Float
  avg_monthly_revenue_gte: Float
  avg_monthly_expense: Float
  avg_monthly_expense_not: Float
  avg_monthly_expense_in: [Float!]
  avg_monthly_expense_not_in: [Float!]
  avg_monthly_expense_lt: Float
  avg_monthly_expense_lte: Float
  avg_monthly_expense_gt: Float
  avg_monthly_expense_gte: Float
  serving_loan: Boolean
  serving_loan_not: Boolean
  bank_account_name: String
  bank_account_name_not: String
  bank_account_name_in: [String!]
  bank_account_name_not_in: [String!]
  bank_account_name_lt: String
  bank_account_name_lte: String
  bank_account_name_gt: String
  bank_account_name_gte: String
  bank_account_name_contains: String
  bank_account_name_not_contains: String
  bank_account_name_starts_with: String
  bank_account_name_not_starts_with: String
  bank_account_name_ends_with: String
  bank_account_name_not_ends_with: String
  bank_account_number: String
  bank_account_number_not: String
  bank_account_number_in: [String!]
  bank_account_number_not_in: [String!]
  bank_account_number_lt: String
  bank_account_number_lte: String
  bank_account_number_gt: String
  bank_account_number_gte: String
  bank_account_number_contains: String
  bank_account_number_not_contains: String
  bank_account_number_starts_with: String
  bank_account_number_not_starts_with: String
  bank_account_number_ends_with: String
  bank_account_number_not_ends_with: String
  bank_name: String
  bank_name_not: String
  bank_name_in: [String!]
  bank_name_not_in: [String!]
  bank_name_lt: String
  bank_name_lte: String
  bank_name_gt: String
  bank_name_gte: String
  bank_name_contains: String
  bank_name_not_contains: String
  bank_name_starts_with: String
  bank_name_not_starts_with: String
  bank_name_ends_with: String
  bank_name_not_ends_with: String
  AND: [BusinessFinancialWhereInput!]
  OR: [BusinessFinancialWhereInput!]
  NOT: [BusinessFinancialWhereInput!]
}

input BusinessFinancialWhereUniqueInput {
  id: ID
}

type BusinessValidation {
  id: ID!
  bvn: String!
  person_id_type: String!
  person_id_number: String!
  statement_url: String!
}

type BusinessValidationConnection {
  pageInfo: PageInfo!
  edges: [BusinessValidationEdge]!
  aggregate: AggregateBusinessValidation!
}

input BusinessValidationCreateInput {
  id: ID
  bvn: String!
  person_id_type: String!
  person_id_number: String!
  statement_url: String!
}

input BusinessValidationCreateOneInput {
  create: BusinessValidationCreateInput
  connect: BusinessValidationWhereUniqueInput
}

type BusinessValidationEdge {
  node: BusinessValidation!
  cursor: String!
}

enum BusinessValidationOrderByInput {
  id_ASC
  id_DESC
  bvn_ASC
  bvn_DESC
  person_id_type_ASC
  person_id_type_DESC
  person_id_number_ASC
  person_id_number_DESC
  statement_url_ASC
  statement_url_DESC
}

type BusinessValidationPreviousValues {
  id: ID!
  bvn: String!
  person_id_type: String!
  person_id_number: String!
  statement_url: String!
}

type BusinessValidationSubscriptionPayload {
  mutation: MutationType!
  node: BusinessValidation
  updatedFields: [String!]
  previousValues: BusinessValidationPreviousValues
}

input BusinessValidationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BusinessValidationWhereInput
  AND: [BusinessValidationSubscriptionWhereInput!]
  OR: [BusinessValidationSubscriptionWhereInput!]
  NOT: [BusinessValidationSubscriptionWhereInput!]
}

input BusinessValidationUpdateDataInput {
  bvn: String
  person_id_type: String
  person_id_number: String
  statement_url: String
}

input BusinessValidationUpdateInput {
  bvn: String
  person_id_type: String
  person_id_number: String
  statement_url: String
}

input BusinessValidationUpdateManyMutationInput {
  bvn: String
  person_id_type: String
  person_id_number: String
  statement_url: String
}

input BusinessValidationUpdateOneRequiredInput {
  create: BusinessValidationCreateInput
  update: BusinessValidationUpdateDataInput
  upsert: BusinessValidationUpsertNestedInput
  connect: BusinessValidationWhereUniqueInput
}

input BusinessValidationUpsertNestedInput {
  update: BusinessValidationUpdateDataInput!
  create: BusinessValidationCreateInput!
}

input BusinessValidationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  bvn: String
  bvn_not: String
  bvn_in: [String!]
  bvn_not_in: [String!]
  bvn_lt: String
  bvn_lte: String
  bvn_gt: String
  bvn_gte: String
  bvn_contains: String
  bvn_not_contains: String
  bvn_starts_with: String
  bvn_not_starts_with: String
  bvn_ends_with: String
  bvn_not_ends_with: String
  person_id_type: String
  person_id_type_not: String
  person_id_type_in: [String!]
  person_id_type_not_in: [String!]
  person_id_type_lt: String
  person_id_type_lte: String
  person_id_type_gt: String
  person_id_type_gte: String
  person_id_type_contains: String
  person_id_type_not_contains: String
  person_id_type_starts_with: String
  person_id_type_not_starts_with: String
  person_id_type_ends_with: String
  person_id_type_not_ends_with: String
  person_id_number: String
  person_id_number_not: String
  person_id_number_in: [String!]
  person_id_number_not_in: [String!]
  person_id_number_lt: String
  person_id_number_lte: String
  person_id_number_gt: String
  person_id_number_gte: String
  person_id_number_contains: String
  person_id_number_not_contains: String
  person_id_number_starts_with: String
  person_id_number_not_starts_with: String
  person_id_number_ends_with: String
  person_id_number_not_ends_with: String
  statement_url: String
  statement_url_not: String
  statement_url_in: [String!]
  statement_url_not_in: [String!]
  statement_url_lt: String
  statement_url_lte: String
  statement_url_gt: String
  statement_url_gte: String
  statement_url_contains: String
  statement_url_not_contains: String
  statement_url_starts_with: String
  statement_url_not_starts_with: String
  statement_url_ends_with: String
  statement_url_not_ends_with: String
  AND: [BusinessValidationWhereInput!]
  OR: [BusinessValidationWhereInput!]
  NOT: [BusinessValidationWhereInput!]
}

input BusinessValidationWhereUniqueInput {
  id: ID
}

scalar DateTime

type FundDetail {
  id: ID!
  amount: Float!
  reason: String!
  dispense_date: DateTime!
  spread: Float
}

type FundDetailConnection {
  pageInfo: PageInfo!
  edges: [FundDetailEdge]!
  aggregate: AggregateFundDetail!
}

input FundDetailCreateInput {
  id: ID
  amount: Float!
  reason: String!
  dispense_date: DateTime!
  spread: Float
}

input FundDetailCreateOneInput {
  create: FundDetailCreateInput
  connect: FundDetailWhereUniqueInput
}

type FundDetailEdge {
  node: FundDetail!
  cursor: String!
}

enum FundDetailOrderByInput {
  id_ASC
  id_DESC
  amount_ASC
  amount_DESC
  reason_ASC
  reason_DESC
  dispense_date_ASC
  dispense_date_DESC
  spread_ASC
  spread_DESC
}

type FundDetailPreviousValues {
  id: ID!
  amount: Float!
  reason: String!
  dispense_date: DateTime!
  spread: Float
}

type FundDetailSubscriptionPayload {
  mutation: MutationType!
  node: FundDetail
  updatedFields: [String!]
  previousValues: FundDetailPreviousValues
}

input FundDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FundDetailWhereInput
  AND: [FundDetailSubscriptionWhereInput!]
  OR: [FundDetailSubscriptionWhereInput!]
  NOT: [FundDetailSubscriptionWhereInput!]
}

input FundDetailUpdateDataInput {
  amount: Float
  reason: String
  dispense_date: DateTime
  spread: Float
}

input FundDetailUpdateInput {
  amount: Float
  reason: String
  dispense_date: DateTime
  spread: Float
}

input FundDetailUpdateManyMutationInput {
  amount: Float
  reason: String
  dispense_date: DateTime
  spread: Float
}

input FundDetailUpdateOneRequiredInput {
  create: FundDetailCreateInput
  update: FundDetailUpdateDataInput
  upsert: FundDetailUpsertNestedInput
  connect: FundDetailWhereUniqueInput
}

input FundDetailUpsertNestedInput {
  update: FundDetailUpdateDataInput!
  create: FundDetailCreateInput!
}

input FundDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  reason: String
  reason_not: String
  reason_in: [String!]
  reason_not_in: [String!]
  reason_lt: String
  reason_lte: String
  reason_gt: String
  reason_gte: String
  reason_contains: String
  reason_not_contains: String
  reason_starts_with: String
  reason_not_starts_with: String
  reason_ends_with: String
  reason_not_ends_with: String
  dispense_date: DateTime
  dispense_date_not: DateTime
  dispense_date_in: [DateTime!]
  dispense_date_not_in: [DateTime!]
  dispense_date_lt: DateTime
  dispense_date_lte: DateTime
  dispense_date_gt: DateTime
  dispense_date_gte: DateTime
  spread: Float
  spread_not: Float
  spread_in: [Float!]
  spread_not_in: [Float!]
  spread_lt: Float
  spread_lte: Float
  spread_gt: Float
  spread_gte: Float
  AND: [FundDetailWhereInput!]
  OR: [FundDetailWhereInput!]
  NOT: [FundDetailWhereInput!]
}

input FundDetailWhereUniqueInput {
  id: ID
}

enum FundStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Gender {
  MALE
  FEMALE
}

type Industry {
  id: ID!
  name: String!
}

type IndustryConnection {
  pageInfo: PageInfo!
  edges: [IndustryEdge]!
  aggregate: AggregateIndustry!
}

input IndustryCreateInput {
  id: ID
  name: String!
}

type IndustryEdge {
  node: Industry!
  cursor: String!
}

enum IndustryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type IndustryPreviousValues {
  id: ID!
  name: String!
}

type IndustrySubscriptionPayload {
  mutation: MutationType!
  node: Industry
  updatedFields: [String!]
  previousValues: IndustryPreviousValues
}

input IndustrySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: IndustryWhereInput
  AND: [IndustrySubscriptionWhereInput!]
  OR: [IndustrySubscriptionWhereInput!]
  NOT: [IndustrySubscriptionWhereInput!]
}

input IndustryUpdateInput {
  name: String
}

input IndustryUpdateManyMutationInput {
  name: String
}

input IndustryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [IndustryWhereInput!]
  OR: [IndustryWhereInput!]
  NOT: [IndustryWhereInput!]
}

input IndustryWhereUniqueInput {
  id: ID
  name: String
}

scalar Long

type Mutation {
  createApplication(data: ApplicationCreateInput!): Application!
  updateApplication(data: ApplicationUpdateInput!, where: ApplicationWhereUniqueInput!): Application
  updateManyApplications(data: ApplicationUpdateManyMutationInput!, where: ApplicationWhereInput): BatchPayload!
  upsertApplication(where: ApplicationWhereUniqueInput!, create: ApplicationCreateInput!, update: ApplicationUpdateInput!): Application!
  deleteApplication(where: ApplicationWhereUniqueInput!): Application
  deleteManyApplications(where: ApplicationWhereInput): BatchPayload!
  createAuth(data: AuthCreateInput!): Auth!
  updateAuth(data: AuthUpdateInput!, where: AuthWhereUniqueInput!): Auth
  updateManyAuths(data: AuthUpdateManyMutationInput!, where: AuthWhereInput): BatchPayload!
  upsertAuth(where: AuthWhereUniqueInput!, create: AuthCreateInput!, update: AuthUpdateInput!): Auth!
  deleteAuth(where: AuthWhereUniqueInput!): Auth
  deleteManyAuths(where: AuthWhereInput): BatchPayload!
  createBusinessDetail(data: BusinessDetailCreateInput!): BusinessDetail!
  updateBusinessDetail(data: BusinessDetailUpdateInput!, where: BusinessDetailWhereUniqueInput!): BusinessDetail
  updateManyBusinessDetails(data: BusinessDetailUpdateManyMutationInput!, where: BusinessDetailWhereInput): BatchPayload!
  upsertBusinessDetail(where: BusinessDetailWhereUniqueInput!, create: BusinessDetailCreateInput!, update: BusinessDetailUpdateInput!): BusinessDetail!
  deleteBusinessDetail(where: BusinessDetailWhereUniqueInput!): BusinessDetail
  deleteManyBusinessDetails(where: BusinessDetailWhereInput): BatchPayload!
  createBusinessFinancial(data: BusinessFinancialCreateInput!): BusinessFinancial!
  updateBusinessFinancial(data: BusinessFinancialUpdateInput!, where: BusinessFinancialWhereUniqueInput!): BusinessFinancial
  updateManyBusinessFinancials(data: BusinessFinancialUpdateManyMutationInput!, where: BusinessFinancialWhereInput): BatchPayload!
  upsertBusinessFinancial(where: BusinessFinancialWhereUniqueInput!, create: BusinessFinancialCreateInput!, update: BusinessFinancialUpdateInput!): BusinessFinancial!
  deleteBusinessFinancial(where: BusinessFinancialWhereUniqueInput!): BusinessFinancial
  deleteManyBusinessFinancials(where: BusinessFinancialWhereInput): BatchPayload!
  createBusinessValidation(data: BusinessValidationCreateInput!): BusinessValidation!
  updateBusinessValidation(data: BusinessValidationUpdateInput!, where: BusinessValidationWhereUniqueInput!): BusinessValidation
  updateManyBusinessValidations(data: BusinessValidationUpdateManyMutationInput!, where: BusinessValidationWhereInput): BatchPayload!
  upsertBusinessValidation(where: BusinessValidationWhereUniqueInput!, create: BusinessValidationCreateInput!, update: BusinessValidationUpdateInput!): BusinessValidation!
  deleteBusinessValidation(where: BusinessValidationWhereUniqueInput!): BusinessValidation
  deleteManyBusinessValidations(where: BusinessValidationWhereInput): BatchPayload!
  createFundDetail(data: FundDetailCreateInput!): FundDetail!
  updateFundDetail(data: FundDetailUpdateInput!, where: FundDetailWhereUniqueInput!): FundDetail
  updateManyFundDetails(data: FundDetailUpdateManyMutationInput!, where: FundDetailWhereInput): BatchPayload!
  upsertFundDetail(where: FundDetailWhereUniqueInput!, create: FundDetailCreateInput!, update: FundDetailUpdateInput!): FundDetail!
  deleteFundDetail(where: FundDetailWhereUniqueInput!): FundDetail
  deleteManyFundDetails(where: FundDetailWhereInput): BatchPayload!
  createIndustry(data: IndustryCreateInput!): Industry!
  updateIndustry(data: IndustryUpdateInput!, where: IndustryWhereUniqueInput!): Industry
  updateManyIndustries(data: IndustryUpdateManyMutationInput!, where: IndustryWhereInput): BatchPayload!
  upsertIndustry(where: IndustryWhereUniqueInput!, create: IndustryCreateInput!, update: IndustryUpdateInput!): Industry!
  deleteIndustry(where: IndustryWhereUniqueInput!): Industry
  deleteManyIndustries(where: IndustryWhereInput): BatchPayload!
  createNextOfKinDetail(data: NextOfKinDetailCreateInput!): NextOfKinDetail!
  updateNextOfKinDetail(data: NextOfKinDetailUpdateInput!, where: NextOfKinDetailWhereUniqueInput!): NextOfKinDetail
  updateManyNextOfKinDetails(data: NextOfKinDetailUpdateManyMutationInput!, where: NextOfKinDetailWhereInput): BatchPayload!
  upsertNextOfKinDetail(where: NextOfKinDetailWhereUniqueInput!, create: NextOfKinDetailCreateInput!, update: NextOfKinDetailUpdateInput!): NextOfKinDetail!
  deleteNextOfKinDetail(where: NextOfKinDetailWhereUniqueInput!): NextOfKinDetail
  deleteManyNextOfKinDetails(where: NextOfKinDetailWhereInput): BatchPayload!
  createPersonalDetail(data: PersonalDetailCreateInput!): PersonalDetail!
  updatePersonalDetail(data: PersonalDetailUpdateInput!, where: PersonalDetailWhereUniqueInput!): PersonalDetail
  updateManyPersonalDetails(data: PersonalDetailUpdateManyMutationInput!, where: PersonalDetailWhereInput): BatchPayload!
  upsertPersonalDetail(where: PersonalDetailWhereUniqueInput!, create: PersonalDetailCreateInput!, update: PersonalDetailUpdateInput!): PersonalDetail!
  deletePersonalDetail(where: PersonalDetailWhereUniqueInput!): PersonalDetail
  deleteManyPersonalDetails(where: PersonalDetailWhereInput): BatchPayload!
  createSocialMedia(data: SocialMediaCreateInput!): SocialMedia!
  updateSocialMedia(data: SocialMediaUpdateInput!, where: SocialMediaWhereUniqueInput!): SocialMedia
  updateManySocialMedias(data: SocialMediaUpdateManyMutationInput!, where: SocialMediaWhereInput): BatchPayload!
  upsertSocialMedia(where: SocialMediaWhereUniqueInput!, create: SocialMediaCreateInput!, update: SocialMediaUpdateInput!): SocialMedia!
  deleteSocialMedia(where: SocialMediaWhereUniqueInput!): SocialMedia
  deleteManySocialMedias(where: SocialMediaWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type NextOfKinDetail {
  id: ID!
  first_name: String!
  last_name: String!
  phone_number: String!
  relationship: String!
}

type NextOfKinDetailConnection {
  pageInfo: PageInfo!
  edges: [NextOfKinDetailEdge]!
  aggregate: AggregateNextOfKinDetail!
}

input NextOfKinDetailCreateInput {
  id: ID
  first_name: String!
  last_name: String!
  phone_number: String!
  relationship: String!
}

type NextOfKinDetailEdge {
  node: NextOfKinDetail!
  cursor: String!
}

enum NextOfKinDetailOrderByInput {
  id_ASC
  id_DESC
  first_name_ASC
  first_name_DESC
  last_name_ASC
  last_name_DESC
  phone_number_ASC
  phone_number_DESC
  relationship_ASC
  relationship_DESC
}

type NextOfKinDetailPreviousValues {
  id: ID!
  first_name: String!
  last_name: String!
  phone_number: String!
  relationship: String!
}

type NextOfKinDetailSubscriptionPayload {
  mutation: MutationType!
  node: NextOfKinDetail
  updatedFields: [String!]
  previousValues: NextOfKinDetailPreviousValues
}

input NextOfKinDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NextOfKinDetailWhereInput
  AND: [NextOfKinDetailSubscriptionWhereInput!]
  OR: [NextOfKinDetailSubscriptionWhereInput!]
  NOT: [NextOfKinDetailSubscriptionWhereInput!]
}

input NextOfKinDetailUpdateInput {
  first_name: String
  last_name: String
  phone_number: String
  relationship: String
}

input NextOfKinDetailUpdateManyMutationInput {
  first_name: String
  last_name: String
  phone_number: String
  relationship: String
}

input NextOfKinDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  phone_number: String
  phone_number_not: String
  phone_number_in: [String!]
  phone_number_not_in: [String!]
  phone_number_lt: String
  phone_number_lte: String
  phone_number_gt: String
  phone_number_gte: String
  phone_number_contains: String
  phone_number_not_contains: String
  phone_number_starts_with: String
  phone_number_not_starts_with: String
  phone_number_ends_with: String
  phone_number_not_ends_with: String
  relationship: String
  relationship_not: String
  relationship_in: [String!]
  relationship_not_in: [String!]
  relationship_lt: String
  relationship_lte: String
  relationship_gt: String
  relationship_gte: String
  relationship_contains: String
  relationship_not_contains: String
  relationship_starts_with: String
  relationship_not_starts_with: String
  relationship_ends_with: String
  relationship_not_ends_with: String
  AND: [NextOfKinDetailWhereInput!]
  OR: [NextOfKinDetailWhereInput!]
  NOT: [NextOfKinDetailWhereInput!]
}

input NextOfKinDetailWhereUniqueInput {
  id: ID
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PersonalDetail {
  id: ID!
  email: String!
  auth: Auth
  first_name: String!
  last_name: String!
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

type PersonalDetailConnection {
  pageInfo: PageInfo!
  edges: [PersonalDetailEdge]!
  aggregate: AggregatePersonalDetail!
}

input PersonalDetailCreateInput {
  id: ID
  email: String!
  auth: AuthCreateOneWithoutDetailsInput
  first_name: String!
  last_name: String!
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

input PersonalDetailCreateOneInput {
  create: PersonalDetailCreateInput
  connect: PersonalDetailWhereUniqueInput
}

input PersonalDetailCreateOneWithoutAuthInput {
  create: PersonalDetailCreateWithoutAuthInput
  connect: PersonalDetailWhereUniqueInput
}

input PersonalDetailCreateWithoutAuthInput {
  id: ID
  email: String!
  first_name: String!
  last_name: String!
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

type PersonalDetailEdge {
  node: PersonalDetail!
  cursor: String!
}

enum PersonalDetailOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  first_name_ASC
  first_name_DESC
  last_name_ASC
  last_name_DESC
  phone_number_ASC
  phone_number_DESC
  date_of_birth_ASC
  date_of_birth_DESC
  gender_ASC
  gender_DESC
  profile_pic_ASC
  profile_pic_DESC
  nationality_ASC
  nationality_DESC
  state_ASC
  state_DESC
  home_address_ASC
  home_address_DESC
  social_handle_ASC
  social_handle_DESC
  kin_name_ASC
  kin_name_DESC
  kin_phone_ASC
  kin_phone_DESC
  kin_relation_ASC
  kin_relation_DESC
}

type PersonalDetailPreviousValues {
  id: ID!
  email: String!
  first_name: String!
  last_name: String!
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

type PersonalDetailSubscriptionPayload {
  mutation: MutationType!
  node: PersonalDetail
  updatedFields: [String!]
  previousValues: PersonalDetailPreviousValues
}

input PersonalDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PersonalDetailWhereInput
  AND: [PersonalDetailSubscriptionWhereInput!]
  OR: [PersonalDetailSubscriptionWhereInput!]
  NOT: [PersonalDetailSubscriptionWhereInput!]
}

input PersonalDetailUpdateDataInput {
  email: String
  auth: AuthUpdateOneWithoutDetailsInput
  first_name: String
  last_name: String
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

input PersonalDetailUpdateInput {
  email: String
  auth: AuthUpdateOneWithoutDetailsInput
  first_name: String
  last_name: String
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

input PersonalDetailUpdateManyMutationInput {
  email: String
  first_name: String
  last_name: String
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

input PersonalDetailUpdateOneRequiredInput {
  create: PersonalDetailCreateInput
  update: PersonalDetailUpdateDataInput
  upsert: PersonalDetailUpsertNestedInput
  connect: PersonalDetailWhereUniqueInput
}

input PersonalDetailUpdateOneRequiredWithoutAuthInput {
  create: PersonalDetailCreateWithoutAuthInput
  update: PersonalDetailUpdateWithoutAuthDataInput
  upsert: PersonalDetailUpsertWithoutAuthInput
  connect: PersonalDetailWhereUniqueInput
}

input PersonalDetailUpdateWithoutAuthDataInput {
  email: String
  first_name: String
  last_name: String
  phone_number: String
  date_of_birth: DateTime
  gender: Gender
  profile_pic: String
  nationality: String
  state: String
  home_address: String
  social_handle: String
  kin_name: String
  kin_phone: String
  kin_relation: String
}

input PersonalDetailUpsertNestedInput {
  update: PersonalDetailUpdateDataInput!
  create: PersonalDetailCreateInput!
}

input PersonalDetailUpsertWithoutAuthInput {
  update: PersonalDetailUpdateWithoutAuthDataInput!
  create: PersonalDetailCreateWithoutAuthInput!
}

input PersonalDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  auth: AuthWhereInput
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  phone_number: String
  phone_number_not: String
  phone_number_in: [String!]
  phone_number_not_in: [String!]
  phone_number_lt: String
  phone_number_lte: String
  phone_number_gt: String
  phone_number_gte: String
  phone_number_contains: String
  phone_number_not_contains: String
  phone_number_starts_with: String
  phone_number_not_starts_with: String
  phone_number_ends_with: String
  phone_number_not_ends_with: String
  date_of_birth: DateTime
  date_of_birth_not: DateTime
  date_of_birth_in: [DateTime!]
  date_of_birth_not_in: [DateTime!]
  date_of_birth_lt: DateTime
  date_of_birth_lte: DateTime
  date_of_birth_gt: DateTime
  date_of_birth_gte: DateTime
  gender: Gender
  gender_not: Gender
  gender_in: [Gender!]
  gender_not_in: [Gender!]
  profile_pic: String
  profile_pic_not: String
  profile_pic_in: [String!]
  profile_pic_not_in: [String!]
  profile_pic_lt: String
  profile_pic_lte: String
  profile_pic_gt: String
  profile_pic_gte: String
  profile_pic_contains: String
  profile_pic_not_contains: String
  profile_pic_starts_with: String
  profile_pic_not_starts_with: String
  profile_pic_ends_with: String
  profile_pic_not_ends_with: String
  nationality: String
  nationality_not: String
  nationality_in: [String!]
  nationality_not_in: [String!]
  nationality_lt: String
  nationality_lte: String
  nationality_gt: String
  nationality_gte: String
  nationality_contains: String
  nationality_not_contains: String
  nationality_starts_with: String
  nationality_not_starts_with: String
  nationality_ends_with: String
  nationality_not_ends_with: String
  state: String
  state_not: String
  state_in: [String!]
  state_not_in: [String!]
  state_lt: String
  state_lte: String
  state_gt: String
  state_gte: String
  state_contains: String
  state_not_contains: String
  state_starts_with: String
  state_not_starts_with: String
  state_ends_with: String
  state_not_ends_with: String
  home_address: String
  home_address_not: String
  home_address_in: [String!]
  home_address_not_in: [String!]
  home_address_lt: String
  home_address_lte: String
  home_address_gt: String
  home_address_gte: String
  home_address_contains: String
  home_address_not_contains: String
  home_address_starts_with: String
  home_address_not_starts_with: String
  home_address_ends_with: String
  home_address_not_ends_with: String
  social_handle: String
  social_handle_not: String
  social_handle_in: [String!]
  social_handle_not_in: [String!]
  social_handle_lt: String
  social_handle_lte: String
  social_handle_gt: String
  social_handle_gte: String
  social_handle_contains: String
  social_handle_not_contains: String
  social_handle_starts_with: String
  social_handle_not_starts_with: String
  social_handle_ends_with: String
  social_handle_not_ends_with: String
  kin_name: String
  kin_name_not: String
  kin_name_in: [String!]
  kin_name_not_in: [String!]
  kin_name_lt: String
  kin_name_lte: String
  kin_name_gt: String
  kin_name_gte: String
  kin_name_contains: String
  kin_name_not_contains: String
  kin_name_starts_with: String
  kin_name_not_starts_with: String
  kin_name_ends_with: String
  kin_name_not_ends_with: String
  kin_phone: String
  kin_phone_not: String
  kin_phone_in: [String!]
  kin_phone_not_in: [String!]
  kin_phone_lt: String
  kin_phone_lte: String
  kin_phone_gt: String
  kin_phone_gte: String
  kin_phone_contains: String
  kin_phone_not_contains: String
  kin_phone_starts_with: String
  kin_phone_not_starts_with: String
  kin_phone_ends_with: String
  kin_phone_not_ends_with: String
  kin_relation: String
  kin_relation_not: String
  kin_relation_in: [String!]
  kin_relation_not_in: [String!]
  kin_relation_lt: String
  kin_relation_lte: String
  kin_relation_gt: String
  kin_relation_gte: String
  kin_relation_contains: String
  kin_relation_not_contains: String
  kin_relation_starts_with: String
  kin_relation_not_starts_with: String
  kin_relation_ends_with: String
  kin_relation_not_ends_with: String
  AND: [PersonalDetailWhereInput!]
  OR: [PersonalDetailWhereInput!]
  NOT: [PersonalDetailWhereInput!]
}

input PersonalDetailWhereUniqueInput {
  id: ID
}

type Query {
  application(where: ApplicationWhereUniqueInput!): Application
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application]!
  applicationsConnection(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ApplicationConnection!
  auth(where: AuthWhereUniqueInput!): Auth
  auths(where: AuthWhereInput, orderBy: AuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Auth]!
  authsConnection(where: AuthWhereInput, orderBy: AuthOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthConnection!
  businessDetail(where: BusinessDetailWhereUniqueInput!): BusinessDetail
  businessDetails(where: BusinessDetailWhereInput, orderBy: BusinessDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BusinessDetail]!
  businessDetailsConnection(where: BusinessDetailWhereInput, orderBy: BusinessDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BusinessDetailConnection!
  businessFinancial(where: BusinessFinancialWhereUniqueInput!): BusinessFinancial
  businessFinancials(where: BusinessFinancialWhereInput, orderBy: BusinessFinancialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BusinessFinancial]!
  businessFinancialsConnection(where: BusinessFinancialWhereInput, orderBy: BusinessFinancialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BusinessFinancialConnection!
  businessValidation(where: BusinessValidationWhereUniqueInput!): BusinessValidation
  businessValidations(where: BusinessValidationWhereInput, orderBy: BusinessValidationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BusinessValidation]!
  businessValidationsConnection(where: BusinessValidationWhereInput, orderBy: BusinessValidationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BusinessValidationConnection!
  fundDetail(where: FundDetailWhereUniqueInput!): FundDetail
  fundDetails(where: FundDetailWhereInput, orderBy: FundDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FundDetail]!
  fundDetailsConnection(where: FundDetailWhereInput, orderBy: FundDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FundDetailConnection!
  industry(where: IndustryWhereUniqueInput!): Industry
  industries(where: IndustryWhereInput, orderBy: IndustryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Industry]!
  industriesConnection(where: IndustryWhereInput, orderBy: IndustryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IndustryConnection!
  nextOfKinDetail(where: NextOfKinDetailWhereUniqueInput!): NextOfKinDetail
  nextOfKinDetails(where: NextOfKinDetailWhereInput, orderBy: NextOfKinDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NextOfKinDetail]!
  nextOfKinDetailsConnection(where: NextOfKinDetailWhereInput, orderBy: NextOfKinDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NextOfKinDetailConnection!
  personalDetail(where: PersonalDetailWhereUniqueInput!): PersonalDetail
  personalDetails(where: PersonalDetailWhereInput, orderBy: PersonalDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PersonalDetail]!
  personalDetailsConnection(where: PersonalDetailWhereInput, orderBy: PersonalDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonalDetailConnection!
  socialMedia(where: SocialMediaWhereUniqueInput!): SocialMedia
  socialMedias(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia]!
  socialMediasConnection(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SocialMediaConnection!
  node(id: ID!): Node
}

type SocialMedia {
  id: ID!
  auth: Auth!
  media_type: String!
  link: String!
}

type SocialMediaConnection {
  pageInfo: PageInfo!
  edges: [SocialMediaEdge]!
  aggregate: AggregateSocialMedia!
}

input SocialMediaCreateInput {
  id: ID
  auth: AuthCreateOneWithoutSocial_mediaInput!
  media_type: String!
  link: String!
}

input SocialMediaCreateManyWithoutAuthInput {
  create: [SocialMediaCreateWithoutAuthInput!]
  connect: [SocialMediaWhereUniqueInput!]
}

input SocialMediaCreateWithoutAuthInput {
  id: ID
  media_type: String!
  link: String!
}

type SocialMediaEdge {
  node: SocialMedia!
  cursor: String!
}

enum SocialMediaOrderByInput {
  id_ASC
  id_DESC
  media_type_ASC
  media_type_DESC
  link_ASC
  link_DESC
}

type SocialMediaPreviousValues {
  id: ID!
  media_type: String!
  link: String!
}

input SocialMediaScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  media_type: String
  media_type_not: String
  media_type_in: [String!]
  media_type_not_in: [String!]
  media_type_lt: String
  media_type_lte: String
  media_type_gt: String
  media_type_gte: String
  media_type_contains: String
  media_type_not_contains: String
  media_type_starts_with: String
  media_type_not_starts_with: String
  media_type_ends_with: String
  media_type_not_ends_with: String
  link: String
  link_not: String
  link_in: [String!]
  link_not_in: [String!]
  link_lt: String
  link_lte: String
  link_gt: String
  link_gte: String
  link_contains: String
  link_not_contains: String
  link_starts_with: String
  link_not_starts_with: String
  link_ends_with: String
  link_not_ends_with: String
  AND: [SocialMediaScalarWhereInput!]
  OR: [SocialMediaScalarWhereInput!]
  NOT: [SocialMediaScalarWhereInput!]
}

type SocialMediaSubscriptionPayload {
  mutation: MutationType!
  node: SocialMedia
  updatedFields: [String!]
  previousValues: SocialMediaPreviousValues
}

input SocialMediaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SocialMediaWhereInput
  AND: [SocialMediaSubscriptionWhereInput!]
  OR: [SocialMediaSubscriptionWhereInput!]
  NOT: [SocialMediaSubscriptionWhereInput!]
}

input SocialMediaUpdateInput {
  auth: AuthUpdateOneRequiredWithoutSocial_mediaInput
  media_type: String
  link: String
}

input SocialMediaUpdateManyDataInput {
  media_type: String
  link: String
}

input SocialMediaUpdateManyMutationInput {
  media_type: String
  link: String
}

input SocialMediaUpdateManyWithoutAuthInput {
  create: [SocialMediaCreateWithoutAuthInput!]
  delete: [SocialMediaWhereUniqueInput!]
  connect: [SocialMediaWhereUniqueInput!]
  set: [SocialMediaWhereUniqueInput!]
  disconnect: [SocialMediaWhereUniqueInput!]
  update: [SocialMediaUpdateWithWhereUniqueWithoutAuthInput!]
  upsert: [SocialMediaUpsertWithWhereUniqueWithoutAuthInput!]
  deleteMany: [SocialMediaScalarWhereInput!]
  updateMany: [SocialMediaUpdateManyWithWhereNestedInput!]
}

input SocialMediaUpdateManyWithWhereNestedInput {
  where: SocialMediaScalarWhereInput!
  data: SocialMediaUpdateManyDataInput!
}

input SocialMediaUpdateWithoutAuthDataInput {
  media_type: String
  link: String
}

input SocialMediaUpdateWithWhereUniqueWithoutAuthInput {
  where: SocialMediaWhereUniqueInput!
  data: SocialMediaUpdateWithoutAuthDataInput!
}

input SocialMediaUpsertWithWhereUniqueWithoutAuthInput {
  where: SocialMediaWhereUniqueInput!
  update: SocialMediaUpdateWithoutAuthDataInput!
  create: SocialMediaCreateWithoutAuthInput!
}

input SocialMediaWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  auth: AuthWhereInput
  media_type: String
  media_type_not: String
  media_type_in: [String!]
  media_type_not_in: [String!]
  media_type_lt: String
  media_type_lte: String
  media_type_gt: String
  media_type_gte: String
  media_type_contains: String
  media_type_not_contains: String
  media_type_starts_with: String
  media_type_not_starts_with: String
  media_type_ends_with: String
  media_type_not_ends_with: String
  link: String
  link_not: String
  link_in: [String!]
  link_not_in: [String!]
  link_lt: String
  link_lte: String
  link_gt: String
  link_gte: String
  link_contains: String
  link_not_contains: String
  link_starts_with: String
  link_not_starts_with: String
  link_ends_with: String
  link_not_ends_with: String
  AND: [SocialMediaWhereInput!]
  OR: [SocialMediaWhereInput!]
  NOT: [SocialMediaWhereInput!]
}

input SocialMediaWhereUniqueInput {
  id: ID
}

type Subscription {
  application(where: ApplicationSubscriptionWhereInput): ApplicationSubscriptionPayload
  auth(where: AuthSubscriptionWhereInput): AuthSubscriptionPayload
  businessDetail(where: BusinessDetailSubscriptionWhereInput): BusinessDetailSubscriptionPayload
  businessFinancial(where: BusinessFinancialSubscriptionWhereInput): BusinessFinancialSubscriptionPayload
  businessValidation(where: BusinessValidationSubscriptionWhereInput): BusinessValidationSubscriptionPayload
  fundDetail(where: FundDetailSubscriptionWhereInput): FundDetailSubscriptionPayload
  industry(where: IndustrySubscriptionWhereInput): IndustrySubscriptionPayload
  nextOfKinDetail(where: NextOfKinDetailSubscriptionWhereInput): NextOfKinDetailSubscriptionPayload
  personalDetail(where: PersonalDetailSubscriptionWhereInput): PersonalDetailSubscriptionPayload
  socialMedia(where: SocialMediaSubscriptionWhereInput): SocialMediaSubscriptionPayload
}
`
      }
    